@page "/players/{playerTransfermarktId}/stats"

@using TransfermarktScraper.Domain.DTOs.Response
@using TransfermarktScraper.Domain.DTOs.Response.Stat
@using TransfermarktScraper.Domain.DTOs.Request.Stat
@using TransfermarktScraper.Web.Clients.Interfaces
@using TransfermarktScraper.Web.Services.Interfaces

@attribute [StreamRendering(true)]

@inject IPlayerStatClient PlayerStatClient
@inject IItemSelectionService ItemSelectionService

<PageTitle>Player Stats</PageTitle>

@if (player == null || playerStat == null)
{
    <MudText HtmlTag="em">Scraping player stats please wait...</MudText>
}
else
{
    <MudStack Row="true" StretchItems="StretchItems.Middle">
        <MudImage Src="@player.Portrait" Alt="@player.Name" Width="250" />
        <MudList Dense="true" T="PlayerResponse">
            <MudListItem>Name: @player.Name</MudListItem>
            <MudListItem>Age: @player.Age</MudListItem>
            <MudListItem>Date of birth: @player.DateOfBirth</MudListItem>
            <MudListItem>
                <MudStack Row="true">
                    Nationalities:
                    <MudAvatarGroup Spacing="0">
                        @foreach (var nationality in player.Nationalities)
                        {
                            <MudAvatar Class="mr-2" Size="Size.Small" Square="true">
                                <MudImage Src=@nationality></MudImage>
                            </MudAvatar>
                        }
                    </MudAvatarGroup>
                </MudStack>
            </MudListItem>
            <MudListItem>Height: @(player.Height.HasValue && player.Height.Value != 0 ? $"{player.Height} cm" : "-")</MudListItem>
            <MudListItem>Preferred Foot: @(player.Foot != string.Empty ? player.Foot : "-")</MudListItem>
            <MudListItem>Player Number: @player.Number</MudListItem>
            <MudListItem>Position: @(player.Position != string.Empty ? player.Position : "-")</MudListItem>
            <MudListItem>Start Contract: @player.ContractStart</MudListItem>
            <MudListItem>End Contract: @(player.ContractEnd ?? "-")</MudListItem>
            <MudListItem>Market value: @player.MarketValue €</MudListItem>
        </MudList>
    </MudStack>

    <MudSelect Label="Select Season"
    T="PlayerSeasonStatResponse"
    Value="selectedPlayerSeasonStat"
    ValueChanged="OnSelectedPlayerSeasonStat">
        @foreach (var season in playerStat.PlayerSeasonStats)
        {
            <MudSelectItem T="PlayerSeasonStatResponse" Value="season">
                @season.SeasonTransfermarktId
            </MudSelectItem>
        }
    </MudSelect>

    @if (selectedPlayerSeasonStat != null)
    {

    }
}

@code {
    [Parameter]
    public string playerTransfermarktId { get; set; } = default!;
    private PlayerStatResponse playerStat = null!;
    private PlayerResponse player = null!;
    private PlayerSeasonStatResponse? selectedPlayerSeasonStat;

    protected override async Task OnInitializedAsync()
    {
        player = ItemSelectionService.SelectedPlayers.First();

        var playerStatRequest = new PlayerStatRequest()
        {
            PlayerTransfermarktId = playerTransfermarktId,
            SeasonTransfermarktId = "ges",
            Position = player.Position,
        };

        var playerStatRequests = new List<PlayerStatRequest> { playerStatRequest };

        var playerStatResponses = await PlayerStatClient.GetPlayerStatsAsync(playerStatRequests);

        if (playerStatResponses == null || !playerStatResponses.Any())
        {
            return;
        }

        playerStat = playerStatResponses.First();
    }

    private void OnSelectedPlayerSeasonStat(PlayerSeasonStatResponse playerSeasonStat)
    {
        selectedPlayerSeasonStat = playerSeasonStat;
    }
}
